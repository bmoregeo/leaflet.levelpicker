/*! leaflet.levelpicker - v1.0.2 - 2015-07-18
* https://github.com/bmoregeo/leaflet.levelpicker
* Copyright (c) 2015 Christopher Fricke; Licensed MIT */
L.Control.LevelPicker=L.Control.extend({options:{position:"bottomright",levelUpText:"+",levelDownText:"-",maxHeight:"200px",selectedLevel:1,enableLevelList:!1,levels:[]},initialize:function(a){L.Util.setOptions(this,a),this.levelListShowing=!1,this.levelListButtons=[]},onAdd:function(a){(this._map.hasOwnProperty("level")||null==this._map.level)&&(this._map.level=this.options.selectedLevel);var b=L.DomUtil.create("div","level-picker leaflet-bar");if(L.DomEvent.on(b,"mousewheel",L.DomEvent.stopPropagation),L.DomEvent.disableClickPropagation(b),this.upButton=L.DomUtil.create("a","level-picker-up",b),this.upButton.innerHTML=this.options.levelUpText,L.DomEvent.addListener(this.upButton,"click",this.changeLevelUp,this),this.levelInfo=L.DomUtil.create("a","level-picker-level-info",b),this.options.enableLevelList&&(L.DomUtil.addClass(this.levelInfo,"enable-level-list"),L.DomEvent.addListener(this.levelInfo,"click",this.showLevelList,this)),this.downButton=L.DomUtil.create("a","level-picker-down",b),this.downButton.innerHTML=this.options.levelDownText,L.DomEvent.addListener(this.downButton,"click",this.changeLevelDown,this),this.options.enableLevelList){this.levelListContainer=L.DomUtil.create("div","level-list leaflet-bar",b),this.levelListButtonsContainer=L.DomUtil.create("div","pass",this.levelListContainer),this.levelListButtonsContainer.setAttribute("style","max-height: "+this.options.maxHeight);for(var c=this.options.levels.length;c>0;c--){var d=L.DomUtil.create("a","level-list-button",this.levelListButtonsContainer);d.innerHTML=this.options.levels[c-1].level,d.setAttribute("data-value",c-1),L.DomEvent.addListener(d,"click",this.setLevelLevelList,this),this.levelListButtons.push(d)}L.DomUtil.addClass(this.levelListButtons[this.levelListButtons.length-1-this._map.level],"selected")}return this.updateSelectedLevelInfo(),b},onRemove:function(a){if(L.DomEvent.removeListener(this.upButton,"click",this.changeLevelUp,this),L.DomEvent.removeListener(this.levelInfo,"click",this.showLevelList,this),L.DomEvent.removeListener(this.downButton,"click",this.changeLevelDown,this),this.options.enableLevelList)for(var b in this.levelListButtons)L.DomEvent.removeListener(this.levelListButtons[b],"click",this.setLevelLevelList,this)},changeLevel:function(a){0>a||a>=this.options.levels.length||a===this._map.level||(this.options.enableLevelList&&L.DomUtil.removeClass(this.levelListButtons[this.levelListButtons.length-1-this._map.level],"selected"),this._map.level=a,this._map.fireEvent("level.change",this._map.level),this.updateSelectedLevelInfo(),L.DomUtil.addClass(this.levelListButtons[this.levelListButtons.length-1-a],"selected"))},changeLevelUp:function(){this.changeLevel(this._map.level+1)},changeLevelDown:function(){this.changeLevel(this._map.level-1)},selectLevel:function(a){this.changeLevel(parseInt(a,10)),this.showLevelList()},setLevelLevelList:function(a){this.selectLevel(a.target.getAttribute("data-value"))},showLevelList:function(){this.options.enableLevelList&&(this.levelListShowing=!this.levelListShowing,this.levelListShowing?(L.DomUtil.addClass(this.levelListContainer,"show"),L.DomUtil.addClass(this.levelInfo,"selected")):(L.DomUtil.removeClass(this.levelListContainer,"show"),L.DomUtil.removeClass(this.levelInfo,"selected")))},updateSelectedLevelInfo:function(){this.levelInfo.innerHTML=this.options.levels[this._map.level].level}});